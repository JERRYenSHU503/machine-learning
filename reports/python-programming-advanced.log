Traceback (most recent call last):
  File "/usr/share/miniconda/envs/open-machine-learning-jupyter-book/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/open-machine-learning-jupyter-book/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/open-machine-learning-jupyter-book/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/open-machine-learning-jupyter-book/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/open-machine-learning-jupyter-book/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/open-machine-learning-jupyter-book/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/open-machine-learning-jupyter-book/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/open-machine-learning-jupyter-book/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pytest
def parrot(voltage, state='a stiff', action='voom', parrot_type='Norwegian Blue'):
    """Example of multi-argument function

    This function accepts one required argument (voltage) and three optional arguments
    (state, action, and type).
    """

    message = 'This parrot wouldn\'t ' + action + ' '
    message += 'if you put ' + str(voltage) + ' volts through it. '
    message += 'Lovely plumage, the ' + parrot_type + '. '
    message += 'It\'s ' + state + '!'

    return message

message = (
    "This parrot wouldn't voom if you put 1000 volts through it. "
    "Lovely plumage, the Norwegian Blue. "
    "It's a stiff!"
)
# 1 positional argument
assert parrot(1000) == message
# 1 keyword argument
assert parrot(voltage=1000) == message

message = (
    "This parrot wouldn't VOOOOOM if you put 1000000 volts through it. "
    "Lovely plumage, the Norwegian Blue. "
    "It's a stiff!"
)
# 2 keyword arguments
assert parrot(voltage=1000000, action='VOOOOOM') == message
# 2 keyword arguments
assert parrot(action='VOOOOOM', voltage=1000000) == message

# 3 positional arguments
message = (
    "This parrot wouldn't jump if you put 1000000 volts through it. "
    "Lovely plumage, the Norwegian Blue. "
    "It's bereft of life!"
)
assert parrot(1000000, 'bereft of life', 'jump') == message

# 1 positional, 1 keyword
message = (
    "This parrot wouldn't voom if you put 1000 volts through it. "
    "Lovely plumage, the Norwegian Blue. "
    "It's pushing up the daisies!"
)
assert parrot(1000, state='pushing up the daisies') == message

# But all the following calls would be invalid.

with pytest.raises(Exception):
    # Required argument missing.
    # pylint: disable=no-value-for-parameter
    parrot()

# Non-keyword argument after a keyword argument.
# parrot(voltage=5.0, 'dead')

with pytest.raises(Exception):
    # pylint: disable=redundant-keyword-arg
    parrot(110, voltage=220)

with pytest.raises(Exception):
    # unknown keyword argument
    # pylint: disable=unexpected-keyword-arg,no-value-for-parameter
    parrot(actor='John Cleese')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Input [0;32mIn [12][0m, in [0;36m<cell line: 1>[0;34m()[0m
[0;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mpytest[39;00m
[1;32m      2[0m [38;5;28;01mdef[39;00m [38;5;21mparrot[39m(voltage, state[38;5;241m=[39m[38;5;124m'[39m[38;5;124ma stiff[39m[38;5;124m'[39m, action[38;5;241m=[39m[38;5;124m'[39m[38;5;124mvoom[39m[38;5;124m'[39m, parrot_type[38;5;241m=[39m[38;5;124m'[39m[38;5;124mNorwegian Blue[39m[38;5;124m'[39m):
[1;32m      3[0m     [38;5;124;03m"""Example of multi-argument function[39;00m
[1;32m      4[0m 
[1;32m      5[0m [38;5;124;03m    This function accepts one required argument (voltage) and three optional arguments[39;00m
[1;32m      6[0m [38;5;124;03m    (state, action, and type).[39;00m
[1;32m      7[0m [38;5;124;03m    """[39;00m

[0;31mModuleNotFoundError[0m: No module named 'pytest'
ModuleNotFoundError: No module named 'pytest'

